#!/usr/bin/env python3
"""
Telegram Bot –¥–ª—è Tudushka
–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—ã –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
"""

import logging
import asyncio
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, WebAppInfo
from telegram.ext import Application, CommandHandler, MessageHandler, CallbackQueryHandler, filters, ContextTypes
from decouple import config

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

class TudushkaBot:
    def __init__(self):
        self.bot_token = config('TELEGRAM_BOT_TOKEN', default='')
        self.webapp_url = config('WEBAPP_URL', default='https://yourdomain.com')
        
        if not self.bot_token:
            raise ValueError("TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ")
    
    async def start_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start - –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"""
        user = update.effective_user
        
        # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç
        welcome_text = f"""
ü§ñ <b>–ü—Ä–∏–≤–µ—Ç, {user.first_name}!</b>

–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ <b>–¢—É–¥—É—à–∫–∞</b> ‚Äî —É–º–Ω—ã–π –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∑–∞–¥–∞—á —Å AI –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–æ–º! 

<b>üéØ –ß—Ç–æ —É–º–µ–µ—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:</b>
‚Ä¢ üìù –°–æ–∑–¥–∞–Ω–∏–µ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∞–º–∏
‚Ä¢ ü§ñ AI –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –æ–ø–∏—Å–∞–Ω–∏–π –∑–∞–¥–∞—á (–Ω–∞–ø—Ä–∏–º–µ—Ä: "–ø—Ä–∏–≥–æ—Ç–æ–≤–∏—Ç—å –±–æ—Ä—â" ‚Üí –ø–æ–ª–Ω—ã–π —Ä–µ—Ü–µ–ø—Ç)
‚Ä¢ üí¨ –ß–∞—Ç —Å AI –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–æ–º –¥–ª—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
‚Ä¢ üé® –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ –ø–æ–¥ –≤–∞—à —Å—Ç–∏–ª—å
‚Ä¢ üìä –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã –∏ –∫–∞–ª–µ–Ω–¥–∞—Ä—å –∑–∞–¥–∞—á
‚Ä¢ üåô –¢–µ–º–Ω–∞—è –∏ —Å–≤–µ—Ç–ª–∞—è —Ç–µ–º—ã

<b>üß† AI –º–æ–¥–µ–ª–∏ –Ω–∞ –≤—ã–±–æ—Ä:</b>
‚Ä¢ ChatGPT ‚Äî —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫
‚Ä¢ Perplexity ‚Äî —Å –ø–æ–∏—Å–∫–æ–º –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ

<b>üíé –¢–∞—Ä–∏—Ñ—ã:</b>
‚Ä¢ Free ‚Äî 3 AI –æ–ø–∏—Å–∞–Ω–∏—è –≤ –¥–µ–Ω—å
‚Ä¢ Plus ‚Äî 20 AI –æ–ø–∏—Å–∞–Ω–∏–π + –±–æ–ª—å—à–µ —á–∞—Ç–∞
‚Ä¢ Pro ‚Äî –±–µ–∑–ª–∏–º–∏—Ç–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ

–ì–æ—Ç–æ–≤—ã –Ω–∞—á–∞—Ç—å –ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å —Å —É–º–æ–º? üöÄ
        """
        
        # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ WebApp
        keyboard = InlineKeyboardMarkup([
            [InlineKeyboardButton(
                "üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å –¢—É–¥—É—à–∫–∞",
                web_app=WebAppInfo(url=self.webapp_url)
            )],
            [InlineKeyboardButton(
                "‚ÑπÔ∏è –û –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏",
                callback_data="about"
            )]
        ])
        
        await update.message.reply_text(
            welcome_text,
            parse_mode='HTML',
            reply_markup=keyboard
        )
    
    async def help_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
        help_text = """
<b>üìö –ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞:</b>

/start ‚Äî –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∏ –∑–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
/help ‚Äî –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
/about ‚Äî –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏

<b>üéØ –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:</b>
‚Ä¢ –°–æ–∑–¥–∞–≤–∞–π—Ç–µ –∑–∞–¥–∞—á–∏ —Å AI –æ–ø–∏—Å–∞–Ω–∏—è–º–∏
‚Ä¢ –û–±—â–∞–π—Ç–µ—Å—å —Å –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–æ–º
‚Ä¢ –í—ã–±–∏—Ä–∞–π—Ç–µ –º–µ–∂–¥—É ChatGPT, Claude, Perplexity
‚Ä¢ –£–ø—Ä–∞–≤–ª—è–π—Ç–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞–º–∏ –∏ –¥–µ–¥–ª–∞–π–Ω–∞–º–∏

–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ! üëá
        """
        
        keyboard = InlineKeyboardMarkup([
            [InlineKeyboardButton(
                "üöÄ –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ",
                web_app=WebAppInfo(url=self.webapp_url)
            )]
        ])
        
        await update.message.reply_text(
            help_text,
            parse_mode='HTML',
            reply_markup=keyboard
        )
    
    async def about_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /about"""
        about_text = """
<b>ü§ñ Tudushka ‚Äî AI-powered –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫</b>

<b>–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫:</b> Tudushka Team
<b>–í–µ—Ä—Å–∏—è:</b> 1.0.0
<b>–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏:</b> React + Django + PostgreSQL

<b>üé® –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:</b>
‚Ä¢ –ü–æ–ª–Ω–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Telegram WebApp
‚Ä¢ –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —á–µ—Ä–µ–∑ Telegram
‚Ä¢ –û–ø–ª–∞—Ç–∞ –ø–æ–¥–ø–∏—Å–æ–∫ —á–µ—Ä–µ–∑ Telegram Stars
‚Ä¢ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏

<b>üîí –ö–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å:</b>
‚Ä¢ –í—Å–µ –¥–∞–Ω–Ω—ã–µ –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω—ã
‚Ä¢ AI –∫–ª—é—á–∏ —Ö—Ä–∞–Ω—è—Ç—Å—è –±–µ–∑–æ–ø–∞—Å–Ω–æ
‚Ä¢ –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è –æ—Å—Ç–∞–µ—Ç—Å—è –ø—Ä–∏–≤–∞—Ç–Ω–æ–π

<b>üí∞ –û–ø–ª–∞—Ç–∞:</b>
–ò—Å–ø–æ–ª—å–∑—É–µ–º Telegram Stars –¥–ª—è —É–¥–æ–±–Ω–æ–π –æ–ø–ª–∞—Ç—ã –ø–æ–¥–ø–∏—Å–æ–∫ –ø—Ä—è–º–æ –≤ –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä–µ.

<b>üìû –ü–æ–¥–¥–µ—Ä–∂–∫–∞:</b>
–ü–æ –≤–æ–ø—Ä–æ—Å–∞–º –ø–∏—à–∏—Ç–µ @support_tudushka
        """
        
        keyboard = InlineKeyboardMarkup([
            [InlineKeyboardButton(
                "üöÄ –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ",
                web_app=WebAppInfo(url=self.webapp_url)
            )],
            [InlineKeyboardButton(
                "üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é",
                callback_data="back_to_start"
            )]
        ])
        
        await update.message.reply_text(
            about_text,
            parse_mode='HTML',
            reply_markup=keyboard
        )
    
    async def button_handler(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏"""
        query = update.callback_query
        await query.answer()
        
        if query.data == "about":
            await self.about_callback(query)
        elif query.data == "back_to_start":
            await self.start_callback(query)
    
    async def about_callback(self, query):
        """–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏"""
        about_text = """
<b>ü§ñ Tudushka ‚Äî AI-powered –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫</b>

<b>üéØ –ö–ª—é—á–µ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:</b>
‚Ä¢ <b>AI –æ–ø–∏—Å–∞–Ω–∏—è:</b> –£–º–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–µ—Ç–∞–ª—å–Ω—ã—Ö –æ–ø–∏—Å–∞–Ω–∏–π –¥–ª—è –ª—é–±—ã—Ö –∑–∞–¥–∞—á
‚Ä¢ <b>–ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è:</b> –ù–∞—Å—Ç—Ä–æ–π—Ç–µ —Å—Ç–∏–ª—å –æ–±—â–µ–Ω–∏—è –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ –ø–æ–¥ —Å–µ–±—è  
‚Ä¢ <b>–í—ã–±–æ—Ä AI:</b> ChatGPT, Claude –∏–ª–∏ Perplexity ‚Äî —á—Ç–æ –≤–∞–º –±–æ–ª—å—à–µ –Ω—Ä–∞–≤–∏—Ç—Å—è
‚Ä¢ <b>–ö–∞–ª–µ–Ω–¥–∞—Ä—å:</b> –ü–ª–∞–Ω–∏—Ä—É–π—Ç–µ –∑–∞–¥–∞—á–∏ –Ω–∞ –¥–µ–Ω—å, –Ω–µ–¥–µ–ª—é, –º–µ—Å—è—Ü
‚Ä¢ <b>–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã:</b> –°–æ–∑–¥–∞–≤–∞–π—Ç–µ —Å–≤–æ–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤–∞–∂–Ω–æ—Å—Ç–∏

<b>üí° –ü—Ä–∏–º–µ—Ä—ã AI –æ–ø–∏—Å–∞–Ω–∏–π:</b>
‚Ä¢ "–ö—É–ø–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç—ã" ‚Üí –°–ø–∏—Å–æ–∫ —Å —É—á–µ—Ç–æ–º –∞–∫—Ü–∏–π –∏ –ø–æ–ª–µ–∑–Ω—ã—Ö —Å–æ–≤–µ—Ç–æ–≤
‚Ä¢ "–ü—Ä–∏–≥–æ—Ç–æ–≤–∏—Ç—å —É–∂–∏–Ω" ‚Üí –†–µ—Ü–µ–ø—Ç —Å –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–∞–º–∏ –∏ –ø–æ—à–∞–≥–æ–≤–æ–π –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–µ–π
‚Ä¢ "–ü–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å—Å—è –∫ –≤—Å—Ç—Ä–µ—á–µ" ‚Üí –ü–ª–∞–Ω –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –∏ —Å–ø–∏—Å–æ–∫ –≤–æ–ø—Ä–æ—Å–æ–≤

–ì–æ—Ç–æ–≤—ã –ø–æ–≤—ã—Å–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å? üöÄ
        """
        
        keyboard = InlineKeyboardMarkup([
            [InlineKeyboardButton(
                "üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ",
                web_app=WebAppInfo(url=self.webapp_url)
            )],
            [InlineKeyboardButton(
                "üîô –ù–∞–∑–∞–¥",
                callback_data="back_to_start"
            )]
        ])
        
        await query.edit_message_text(
            about_text,
            parse_mode='HTML',
            reply_markup=keyboard
        )
    
    async def start_callback(self, query):
        """–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Å—Ç–∞—Ä—Ç–æ–≤–æ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é"""
        user = query.from_user
        
        welcome_text = f"""
ü§ñ <b>–ü—Ä–∏–≤–µ—Ç, {user.first_name}!</b>

–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ <b>–¢—É–¥—É—à–∫–∞</b> ‚Äî —É–º–Ω—ã–π –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∑–∞–¥–∞—á —Å AI –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–æ–º! 

<b>üéØ –ß—Ç–æ —É–º–µ–µ—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:</b>
‚Ä¢ üìù –°–æ–∑–¥–∞–Ω–∏–µ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∞–º–∏
‚Ä¢ ü§ñ AI –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –æ–ø–∏—Å–∞–Ω–∏–π –∑–∞–¥–∞—á 
‚Ä¢ üí¨ –ß–∞—Ç —Å AI –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–æ–º –¥–ª—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
‚Ä¢ üé® –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ –ø–æ–¥ –≤–∞—à —Å—Ç–∏–ª—å
‚Ä¢ üìä –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã –∏ –∫–∞–ª–µ–Ω–¥–∞—Ä—å –∑–∞–¥–∞—á

<b>üß† AI –º–æ–¥–µ–ª–∏ –Ω–∞ –≤—ã–±–æ—Ä:</b>
‚Ä¢ ChatGPT ‚Äî —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫
‚Ä¢ Perplexity ‚Äî —Å –ø–æ–∏—Å–∫–æ–º –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ

–ì–æ—Ç–æ–≤—ã –Ω–∞—á–∞—Ç—å –ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å —Å —É–º–æ–º? üöÄ
        """
        
        keyboard = InlineKeyboardMarkup([
            [InlineKeyboardButton(
                "üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å –¢—É–¥—É—à–∫–∞",
                web_app=WebAppInfo(url=self.webapp_url)
            )],
            [InlineKeyboardButton(
                "‚ÑπÔ∏è –û –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏",
                callback_data="about"
            )]
        ])
        
        await query.edit_message_text(
            welcome_text,
            parse_mode='HTML',
            reply_markup=keyboard
        )
    
    async def handle_message(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–±—ã—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
        await update.message.reply_text(
            "üëã –ü—Ä–∏–≤–µ—Ç! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ, –∏–ª–∏ /help –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–º–æ—â–∏."
        )
    
    async def error_handler(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫"""
        logger.error(f"Update {update} caused error {context.error}")
    
    def setup_handlers(self, app: Application):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥"""
        # –ö–æ–º–∞–Ω–¥—ã
        app.add_handler(CommandHandler("start", self.start_command))
        app.add_handler(CommandHandler("help", self.help_command))
        app.add_handler(CommandHandler("about", self.about_command))
        
        # –ö–Ω–æ–ø–∫–∏
        app.add_handler(CallbackQueryHandler(self.button_handler))
        
        # –û–±—ã—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, self.handle_message))
        
        # –û—à–∏–±–∫–∏
        app.add_error_handler(self.error_handler)
    
    async def run(self):
        """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
        app = Application.builder().token(self.bot_token).build()
        self.setup_handlers(app)
        
        logger.info("ü§ñ Tudushka Bot –∑–∞–ø—É—â–µ–Ω!")
        await app.run_polling()

async def main_async():
    """–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –≥–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    bot = TudushkaBot()
    await bot.run()

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –∑–∞–ø—É—â–µ–Ω–Ω—ã–π event loop
        try:
            loop = asyncio.get_running_loop()
            # –ï—Å–ª–∏ –µ—Å—Ç—å –∑–∞–ø—É—â–µ–Ω–Ω—ã–π loop, —Å–æ–∑–¥–∞–µ–º task
            loop.create_task(main_async())
        except RuntimeError:
            # –ï—Å–ª–∏ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ loop, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π
            asyncio.run(main_async())
    except ValueError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
    except KeyboardInterrupt:
        print("\nüõë –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    main()